
@{
    ViewData["Title"] = "DetailsProduct";
}

@model eCommerce.Web.Models.ProductViewModels.ProductDetailsViewModel
<script src="~/js/Product/Product.js"></script>

<!-- Page Title -->
<div class="section section-breadcrumbs">
    <div class="container">
        <div class="row">
            <div class="col-md-12">
                <h1>Product Details</h1>
            </div>
        </div>
    </div>
</div>

<div class="section">
    <div class="container">
        <div class="row">
            <!-- Product Image & Available Colors -->
            <div class="col-sm-6">
                <div class="product-image-large">
                    <img src="@if (Model.Product.ProductImage != null)
	                                    {
		                                     @Model.Product.ProductImage.FirstOrDefault()
	                                    }" alt="@Model.Product.Nama">
                </div>
                @*<div class="colors">
                        <span class="color-white"></span>
                        <span class="color-black"></span>
                        <span class="color-blue"></span>
                        <span class="color-orange"></span>
                        <span class="color-green"></span>
                    </div>*@
            </div>
            <!-- End Product Image & Available Colors -->
            <!-- Product Summary & Options -->
            <div class="col-sm-6 product-details">
                <h4>@Model.Product.Nama</h4>
                @Html.HiddenFor(j => j.Product.Id, new { @id = "hiddenProductId" })
                @Html.HiddenFor(j => j.ParentCategory, new { @id = "hiddenParentCategory" })
                <div class="price">
                    @*@Model.ProductPrice*@
                    Rp. <label id="lblPrice">0</label>
                    @Html.HiddenFor(j => j.ProductInstanceId, new { @id = "hiddenProductInstanceId", @Value = Model.ProductInstanceId})
                </div>
                <table class="shop-item-selections">
                    <!-- Color Selector -->
                    <tr>
                        <td><b>Color:</b></td>
                        <td>
                            @*<div class="dropdown choose-item-color">
                                    <a class="btn btn-sm btn-grey" data-toggle="dropdown" href="#"><span class="color-orange"></span> Orange <b class="caret"></b></a>
                                    <ul class="dropdown-menu" role="menu">
                                        <li role="menuitem"><a href="#"><span class="color-white"></span> White</a></li>
                                        <li role="menuitem"><a href="#"><span class="color-black"></span> Black</a></li>
                                        <li role="menuitem"><a href="#"><span class="color-blue"></span> Blue</a></li>
                                        <li role="menuitem"><a href="#"><span class="color-orange"></span> Orange</a></li>
                                        <li role="menuitem"><a href="#"><span class="color-green"></span> Green</a></li>
                                    </ul>
                                </div>*@
                            @{
                                var lstColor = new List<SelectListItem>();

                                foreach (var item in Model.colorList.Distinct())
                                {
                                    lstColor.Add(new SelectListItem { Value = item, Text = item });
                                }
                            }
                            @Html.DropDownListFor(j => j.selectedColor, lstColor, new { @onchange = "GetPriceByOptions(hiddenProductId.value, ddlColorProductDetails.value, ddlUkuranProductDetails.value, hiddenParentCategory.value)", @id = "ddlColorProductDetails" })
                        </td>
                    </tr>
                    <!-- Size Selector -->
                    @{var cls = "hide";
                        if (Model.ParentCategory != "Elektronik")
                        {  cls = ""; } }
                    <tr class="@cls">
                        <td><b>Size:</b></td>
                        <td>
                            @{
                                var lstUkuran = new List<SelectListItem>();

                                foreach (var item in Model.ukuranList.Distinct())
                                {
                                    lstUkuran.Add(new SelectListItem { Value = item, Text = item });
                                }
                            }
                            @Html.DropDownListFor(j => j.selectedUkuran, lstUkuran, new { @onchange = "GetPriceByOptions(hiddenProductId.value, ddlColorProductDetails.value, ddlUkuranProductDetails.value, hiddenParentCategory.value)", @id = "ddlUkuranProductDetails" })
                        </td>
                    </tr>


                    <!-- Quantity -->
                    <tr>
                        <td><b>Quantity:</b></td>
                        <td>
                            <input id="txt-quantity" type="number" class="form-control input-sm input-micro" value="1" min="1">
                        </td>
                    </tr>
                    <!-- Add to Cart Button -->
                    <tr>
                        <td>&nbsp;</td>
                        <td>
                            <button id="btn-add-to-cart" class="btn btn"><i class="icon-shopping-cart icon-white"></i> Add to Cart</button>
                        </td>
                    </tr>
                </table>
            </div>
            <!-- End Product Summary & Options -->
            <!-- Full Description & Specification -->
            <div class="col-sm-12">
                <div class="tabbable">
                    <!-- Tabs -->
                    <ul class="nav nav-tabs product-details-nav">
                        <li class="active"><a href="#tab1" data-toggle="tab">Description</a></li>
                        <li><a href="#tab2" data-toggle="tab">Review</a></li>
                    </ul>
                    <!-- Tab Content (Full Description) -->
                    <div class="tab-content product-detail-info">
                        <div class="tab-pane active" id="tab1">
                            <h4>Product Description</h4>
                            <p>
                                @Model.Product.Deskripsi
                            </p>
                        </div>
                        <!-- Tab Content (Specification) -->
                        <div class="tab-pane" id="tab2">
                            @foreach (var review in Model.ReviewList)
                            {
                                <h4><strong>@review.Customer.Nama</strong></h4>
                                <p>
                                    @review.TheReview
                                </p>
                            }
                            @using (Html.BeginForm("AddReview", "Product", new { ProductId = Model.Product.Id }, FormMethod.Post, true, htmlAttributes:new { @class = "form-horizontal"}))
                            {
                                <div>
                                    <label for="from">Your Review:</label>
                                    <br />
                                    @Html.TextAreaFor(j => j.Review.TheReview, new {@style = "height: 200px; width: 700px;" } )
                                    @*<textarea name="message" id="message" style="height: 200px; width: 700px;" onclick="this.value=''">Enter text here...</textarea>*@
                                </div>
                                <div>
                                    <button type="submit" id="btn-add-to-cart" class="btn btn"><i class="icon-shopping-cart icon-white"></i>Submit Review</button>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            </div>
            <!-- End Full Description & Specification -->
        </div>
    </div>
</div>

<script type="text/javascript" src="~/js/Custom/product-jquery.js"></script>